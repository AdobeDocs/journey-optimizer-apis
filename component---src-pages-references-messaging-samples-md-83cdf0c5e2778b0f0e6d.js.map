{"version":3,"file":"component---src-pages-references-messaging-samples-md-83cdf0c5e2778b0f0e6d.js","mappings":"iSAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,+CADR,gDAGA,4OAEA,+GACA,mEAAoD,cAAGC,WAAW,IAC9D,KAAQ,kFADwC,UAGpD,0JACA,mBACE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,iOAeP,2MACA,mBACE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,gzBAwCP,sLACA,mBACE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yeAuBP,oNACA,mBACE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,ozBAuCP,8MACA,mBACE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,k4BA4CV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://journey-optimizer-apis/./src/pages/references/messaging-samples.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/journey-optimizer-apis/journey-optimizer-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"interactive-message-execution-code-examples\"\n    }}>{`Interactive Message Execution code examples`}</h1>\n    <p>{`Below code snippets are using a sample AJO API Triggered Campaigns.\nFor each of these examples to run. You first have to create your API Triggred Campaigns in UI and get ready with your Bearer token and API key. `}</p>\n    <p>{`Note that these examples are written in curl but we support the language of your choice.`}</p>\n    <p>{`Detailed description of the API is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer-stage.adobe.com/journey-optimizer-apis/references/messaging/\"\n      }}>{`here`}</a></p>\n    <summary>Example 1 : This Example is to show how you can send an SMS Message to an existing profile in AEP having phoneNumber defined.</summary>\n    <p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-json\"\n        }}>{`{\n  \"requestId\": \"3126743632163793\",\n  \"campaignId\": \"10e2583b-4d1d-4b57-bd6e-fdc79405d67d\",\n  \"recipients\": [\n    {\n      \"type\": \"aep\",\n      \"namespace\": \"phone\",\n      \"userId\": \"1234567890\"\n    }\n  ]\n}\n`}</code></pre>\n    </p>\n    <summary>Example 2 : This Example is to show how you can send an SMS Message with contextual attributes to multiple existing profiles and overriding the phoneNumber using channelData.</summary>\n    <p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-json\"\n        }}>{`{\n  \"requestId\": \"3126743632163793\",\n  \"campaignId\": \"10e2583b-4d1d-4b57-bd6e-fdc79405d67d\",\n  \"recipients\": [\n    {\n      \"type\": \"aep\",\n      \"namespace\": \"phone\",\n      \"userId\": \"test@gmail.com\",\n      \"channelData\": {\n        \"mobilePhoneNumber\": \"1234567890\"\n      },\n      \"context\": {\n        \"product\" : {\n          \"name\" : \"Jackets\",\n          \"category\": \"Clothes\"\n        },\n        \"offerCode\": \"THANKSGIVING\"\n      }\n    },\n    {\n      \"type\": \"aep\",\n      \"namespace\": \"phone\",\n      \"userId\": \"test1@gmail.com\",\n      \"channelData\": {\n        \"mobilePhoneNumber\": \"0921234567\"\n      },\n      \"context\": {\n        \"product\" : {\n          \"name\" : \"Jackets\",\n          \"category\": \"Clothes\"\n        },\n        \"offerCode\": \"THANKSGIVING\"\n      }\n    }\n  ]\n}\n`}</code></pre>\n    </p>\n    <summary>Example 3 : This Example is to show how you can send a Push Message to an existing profile. You have to get ready with your Push meessaging. information </summary>\n    <p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-json\"\n        }}>{`{\n  \"requestId\": \"3126743632163793\",\n  \"campaignId\": \"10e2583b-4d1d-4b57-bd6e-fdc79405d67d\",\n  \"recipients\": [\n    {\n      \"type\": \"aep\",\n      \"namespace\": \"ecid\",\n      \"userId\": \"12345678901234567890123456789493505531\",\n      /* User needs to configure push identity prior to execution. */\n      \"channelData\": {\n        \"pushInfo\": {\n          \"appID\": \"#appId#\",\n          \"platform\": \"#platform#\",\n          \"token\": \"#token#\"\n        }\n      }\n    }\n  ]\n}\n`}</code></pre>\n    </p>\n    <summary>Example 4: This Example is to show how to send an Email Message to an existing profile with contextual attributes (defined during campaign authooring) and personalization attributes. </summary>\n    <p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-json\"\n        }}>{`{\n  \"requestId\": \"3126743632163793\",\n  \"campaignId\": \"10e2583b-4d1d-4b57-bd6e-fdc79405d67d\",\n  \"recipients\": [\n    {\n      \"type\": \"aep\",\n      \"namespace\": \"email\",\n      \"userId\": \"test@gmail.com\",\n      \"context\": {\n        \"product\" : {\n          \"name\" : \"Jackets\",\n          \"category\": \"Clothes\"\n        },\n        \"offerCode\": \"THANKSGIVING\"\n      },\n      \"profile\": {\n        \"person\":{\n          \"name\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Chao\",\n            \"courtesyTitle\": \"Mr.\"\n          },\n          \"mobilePhone\": {\n            \"number\": \"111-112-3456\",\n            \"primary\": true\n          },\n          \"personalEmail\": {\n            \"address\": \"ajo_im@gmail.com\",\n            \"primary\": true\n          }\n        }\n      }\n    }\n  ]\n}\n`}</code></pre>\n    </p>\n    <summary>Example 5: This Example is to show how to send an Email Message to an existing profile with contextual and personalization attributes and overriding email-Id using channelData. </summary>\n    <p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-json\"\n        }}>{`{\n  \"requestId\": \"3126743632163793\",\n  \"campaignId\": \"10e2583b-4d1d-4b57-bd6e-fdc79405d67d\",\n  \"recipients\": [\n    {\n      \"type\": \"aep\",\n      \"namespace\": \"email\",\n      \"userId\": \"test@gmail.com\",\n      \"channelData\": {\n        \"emailAddress\": \"test123@gmail.com\"\n      },\n      \"context\": {\n        \"product\" : {\n          \"name\" : \"Jackets\",\n          \"category\": \"Clothes\"\n        },\n        \"offerCode\": \"THANKSGIVING\"\n      },\n      \"profile\": {\n        \"person\":{\n          \"name\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Chao\",\n            \"courtesyTitle\": \"Mr.\"\n          },\n          \"mobilePhone\": {\n            \"number\": \"111-112-3456\",\n            \"primary\": true\n          },\n          \"personalEmail\": {\n            \"address\": \"ajo_im@gmail.com\",\n            \"primary\": true\n          }\n        }\n      }\n    }\n  ]\n}\n`}</code></pre>\n    </p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}