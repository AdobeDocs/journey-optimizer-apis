---
openapi: 3.0.0

info:
  description: "
  This API is currently in beta, which may be subject to frequent updates without notice.<br/><br/>
  Interactive Message Execution API helps you with messaging capabilities. Using this REST API,
   you can send transactional messages using a Campaign Id using Email, SMS and Push channels.<br/><br/>
  <b>Related documentation:</b><br/>
  To learn more about the API Triggered Campaign creation flow and supported channels, 
  refer to product documentation <a href="https://experienceleague.adobe.com/docs/journey-optimizer/using/campaigns/create-campaign.html">here</a>"
  
  title: Interactive Message Execution API
  version: "1.0.1 - BETA"
  

externalDocs:
  description: Journey Optimizer Campaign Documentation
  url: https://experienceleague.adobe.com/docs/journey-optimizer/using/campaigns/create-campaign.html

security:
  - imsUserToken: []

servers:
  - url: https://platform-stage.adobe.io/ajo
    description: Stage Environment
  - url: https://platform.adobe.io/ajo
    description: Production Environment

paths:
  /im/executions/unitary:
    parameters:
      - $ref: '#/components/parameters/x-api-key'
      - $ref: '#/components/parameters/x-request-id'
      - $ref: '#/components/parameters/x-gw-ims-org-id'
      - $ref: '#/components/parameters/x-sandbox-name'

    post:
      summary: "Trigger an unitary message execution."
      tags:
        - execution
      operationId: postIMUnitaryMessageExecution
      security:
        - imsUserToken: []
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/imExecutionRequestUnitary'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/imExecutionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  securitySchemes:
    imsUserToken: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  parameters:
    x-api-key:
      name: x-api-key
      description: The API key belonging to the calling client.
      required: true
      in: header
      schema:
        type: string
    x-request-id:
      name: x-request-id
      description: A unique id generated by Adobe.io.
      required: false
      in: header
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      description: The ims org id for which the action is being taken.
      required: true
      in: header
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      description: >-
        Provides the platform Sandbox Name
      required: true
      in: header
      schema:
        type: string

  schemas:
    imExecutionRequestUnitary:
      description: "the IM Execution Request Unitary"
      type: object
      required:
        - requestId
        - recipients
      properties:
        requestId:
          type: string
          description: "the Unique Request Identifier"
          example: "request-12345"
        campaignId:
          type: string
          description: "the Campaign Identifier"
          example: "campaign-12345"
        recipients:
          $ref: '#/components/schemas/recipients'
       
    imExecutionResponse:
      description: "the execution response"
      type: object
      properties:
        executionId:
          description: "the execution ID"
          type: string
          example: "UMA-00859153"
        requestId:
          description: "the request ID"
          type: string
          example: "REQ-80940549"
        createdAt:
          type: string
          format: date-time
          description: "the message execution creation time"
          example: "2016-08-29T09:12:33.001Z"
        createdBy:
          description: "the message execution creation user"
          type: string
          example: "5d1281e6d935456i4273@AdobeId"
        # modification details can be removed after addressing Auditable dependency
        modifiedAt:
          type: string
          format: date-time
          description: "the message execution modification time"
          example: '2016-08-29T09:12:33.001Z'
        modifiedBy:
          description: "the message execution modification user"
          type: string
          example: '4c0190e5d702748f0931@AdobeId'

    errorResponse:
      description: "the error response"
      type: object
      properties:
        type:
          type: string
          description: "the error type"
          example: "https://ns.adobe.com/aep/errors/MSG-000052-400"
        title:
          type: string
          description: "the error title"
          example: "An error has occurred"
        status:
          description: "the error status"
          type: integer
          example: 400
        report:
          description: "the error report"
          type: object
          properties:
            additionalContext:
              additionalProperties:
                type: string
          required:
            - additionalContext
          example:
            "additionalContext": {
              "requestId":"04e7a2a5-f6db-4d15-a1ba-edda77bdb66f",
              "campaignId": "campaign-1234567"
            }

    recipients:
      type: array
      description: "the list of recipients"
      items:
        oneOf:
          - $ref: "#/components/schemas/AEPRecipient"
          - $ref: "#/components/schemas/externalRecipient"
        discriminator:
          propertyName: type
          mapping:
            aep: "#/components/schemas/AEPRecipient"
            external: "#/components/schemas/externalRecipient"
      minItems: 1
      maxItems: 20

    AEPRecipient:
      type: object
      description: "the AEP Recipient Information"
      required:
        - type
        - userId
        - namespace
      properties:
        type:
          type: string
          description: "recipient type: aep"
          example: "aep"
        userId:
          type: string
          description: "the AEP Profile identifier"
          example: "AEP-ProfileID-12345"
        namespace:
          type: string
          description: "the AEP Profile namespace"
          example: "email"
        channelData:
          $ref: "#/components/schemas/recipientChannelData"
        profile:
          $ref: "#/components/schemas/profile"
        context:
          $ref: "#/components/schemas/context"

    externalRecipient:
      type: object
      description: "the External Recipient Information"
      required:
        - type
        - userId
        - namespace
        - channelData
      properties:
        type:
          type: string
          description: "recipient type: external"
          example: "external"
        userId:
          type: string
          description: "the external user identifier. Can be email id or any other unique identifier"
          example: "customer123@example.com"
        namespace:
          type: string
          description: "the External User namespace"
          example: "email"
        channelData:
          $ref: "#/components/schemas/recipientChannelData"
        profile:
          $ref: "#/components/schemas/profile"
        context:
          $ref: "#/components/schemas/context"

    recipientChannelData:
      type: object
      description: "the Channel Data for recipient"
      properties:
        emailAddress:
          type: string
          description: "the email address for emailing which also doubles up as the external userId"
          example: "customer123@example.com"
    profile:
      type: object
      description: "the profile data used for dynamic variable substitution in message content"
      additionalProperties:
        oneOf:
          - type: string
          - type: object
      example:
        {
          "person": {"name": {"firstName": "Jane", "lastName": "Doe"}}
        }
        # Multiple examples support is not available in the currently used OpenAPI version
        # So showing additional examples as comments
        # Example 2: Simple string properties
        # "mobilePhone": {
        #   "primary": "111-111-1111"
      # }
    context:
      type: object
      description: "the context data used for dynamic variable substitution in message content"
      additionalProperties:
        oneOf:
          - type: string
          - type: object
      example:
        {
          "product": "Gaming Laptop"
        }
        # Multiple examples support is not available in the currently used OpenAPI version
        # So showing additional examples as comments
        # Example 2: Simple string properties
        # {
        #   "productName": "LED TV",
        #   "productCategory": "Electronics"
      # }