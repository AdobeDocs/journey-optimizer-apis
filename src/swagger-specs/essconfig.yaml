---
openapi: 3.0.0

info:
  description: ESS Config API
  version: "1.0.0"
  title: ESS Config API
  contact:
    email: ankmahaj@adobe.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

security:
  - BearerAuth: []
  - ApiKeyAuth: []

servers:
  - url: https://platform.adobe.io/journey/imp/config
tags:
  - name: ESS Config APIs

paths:
  /ess/ip-pools:
    parameters:
      - $ref: '#/components/parameters/x-api-key'
      - $ref: '#/components/parameters/x-request-id'
      - $ref: '#/components/parameters/x-gw-ims-org-id'
      - $ref: '#/components/parameters/x-sandbox-name'
    post:
      tags:
        - ESS Config APIs
      summary: Create an IP pool
      operationId: createIpPool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipPool'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ipPoolResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    get:
      tags:
        - ESS Config APIs  
      summary: Get IP pools
      operationId: getIpPools
      parameters:
        - $ref: '#/components/parameters/orderBy'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/start'
        - in: query
          name: property
          description: >-
            <p>Optional property filters. Please refer to <a href="https://git.corp.adobe.com/pages/experience-platform/api-guidelines/5-sorting_paging_and_filtering.html#533-filtering-by-property">api guidelines</a> for filtering support in APIs.
            Filtering is supported on the following properties: name, modifiedAt, createdAt, createdBy and modifiedBy.
            Ex. property=createdAt>=2021-01-14T09:12:33.001Z&property=createdAt<2021-02-21T09:12:33.001Z</p>
          schema:
            type: array
            items:
              type: string
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _page:
                    $ref: '#/components/schemas/page'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ipPoolResponse'
                  _links:
                    $ref: '#/components/schemas/listOfLinks'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

  /ess/ip-pools/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/x-api-key'
      - $ref: '#/components/parameters/x-request-id'
      - $ref: '#/components/parameters/x-gw-ims-org-id'
      - $ref: '#/components/parameters/x-sandbox-name'
    get:
      tags:
        - ESS Config APIs  
      summary: Get IP pool by id. It'll return the latest version
      operationId: getIpPoolById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ipPoolResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    put:
      parameters:
        - $ref: '#/components/parameters/if-match'
      tags:
        - ESS Config APIs  
      summary: Update IP pool by id
      operationId: updateIpPoolById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ipPool'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ipPoolResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

    delete:
      tags:
        - ESS Config APIs  
      summary: Delete IP pool by id
      operationId: deleteIpPoolById
      responses:
        '204':
          description: No Content
  /ess/provisioned-ips:
    parameters:
      - $ref: '#/components/parameters/x-api-key'
      - $ref: '#/components/parameters/x-request-id'
      - $ref: '#/components/parameters/x-gw-ims-org-id'
    get:
      tags:
        - ESS Config APIs
      summary: Get IPs Provisioned for IMS ORG
      operationId: getProvisionedIPs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/provisionedIPsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: The IMS user/service token to access the service.
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: >-
        The clientId of the requester. Find details here
        https://wiki.corp.adobe.com/pages/viewpage.action?spaceKey=API&title=How+to+whitelist+Client+ID+in+API+Portal


  parameters:
    x-api-key:
      name: x-api-key
      description: The API key belonging to the calling client.
      required: true
      in: header
      schema:
        type: string
    x-request-id:
      name: x-request-id
      description: A unique id generated by Adobe.io.
      required: false
      in: header
      schema:
        type: string
    x-gw-ims-org-id:
      name: x-gw-ims-org-id
      description: The ims org id for which the action is being taken.
      required: true
      in: header
      schema:
        type: string
    x-sandbox-name:
      name: x-sandbox-name
      description: >-
        Provides the platform Sandbox Name.
      required: true
      in: header
      schema:
        type: string
    x-sandbox-id:
      name: x-sandbox-id
      description: >-
        Provides the platform Sandbox Id
      required: false
      in: header
      schema:
        type: string
    if-match:
      name: If-Match
      description: >-
        Provides an ETag for conditional update. If the ETag does not match, the request will fail.
      required: false
      in: header
      schema:
        type: string
    orderBy:
      name: orderBy
      description: >-
        Provides the sort-parameter and the direction for sorting of response.
        Add -/+ as prefix for desc/asc. If unspecified, the response will be sorted in desc order.
        Ex. orderBy=+modifiedAt.
      in: query
      schema:
        type: string
        default: -modifiedAt
      required: false
    limit:
      name: limit
      description: >-
        Limit response to a specified positive number of objects.
        Ex. limit=10
      in: query
      schema:
        type: integer
        default: 20
      required: false
    start:
      name: start
      description: >-
        Used for pagination. Specifies the criteria for next page
        with respect to the property specified in orderBy.
        Ex. start=2016-08-29T09:12:33.001Z.
      in: query
      schema:
        type: string
      required: false
    property:
      name: property
      description: >-
        <p>Optional property filters. Please refer to <a href="https://git.corp.adobe.com/pages/experience-platform/api-guidelines/5-sorting_paging_and_filtering.html#533-filtering-by-property">api guidelines</a> for filtering support in APIs.
        Filtering is supported on following properties: id, modifiedAt, createdAt, createdBy and modifiedBy
        Ex. property=createdAt>=2021-01-14T09:12:33.001Z&property=createdAt<2021-02-21T09:12:33.001Z</p>
      in: query
      schema:
        items:
          type: string
        type: array
      required: false

  schemas:
    ipPool:
      type: object
      required:
        - ips
        - name
      properties:
        ips:
          type: array
          items:
            type: string
            example: "112.196.145.195"
        name:
          type: string
          description: Name is a non-empty field and must begin with an alphabet. Underscore, hyphen and alphanumeric characters are allowed. Regex = """^[\p{L}][\p{L}\p{N}_.-]*"""
        description:
          type: string

    ipPoolUpdate:
      type: object
      required:
        - fromVersion
        - toVersion
        - status
      properties:
        fromVersion:
          type: integer
          example: 0
        toVersion:
          type: integer
          example: 1
        status:
          type: string
          enum:
            - inProgress
            - succeeded
            - failed

    provisionedIPsResponse:
      type: object
      properties:
        ipsProvisioned:
          type: array
          items:
            type: string
            example: "112.196.145.195"

    ipPoolResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ipPool'
        - $ref: '#/components/schemas/basicResponse'
      properties:
        update:
          $ref: '#/components/schemas/ipPoolUpdate'
        _links:
          $ref: '#/components/schemas/selfLink'
          
    basicResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/primaryProperties'
      properties:
        _etag:
          type: string
          description: The etag associated with this.
          example: '"eab98d24-18af-48ae-90f9-e59d4f8cfb2b"'
    primaryProperties:
      type: object
      properties:
        id:
          type: string
          example: 3603ed66-ae86-42b8-8a90-d4b4e54e7c3b
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        createdBy:
          type: string
          example: '4c0190e5d702748f0931@AdobeId'
        modifiedAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        modifiedBy:
          type: string
          example: '4c0190e5d702748f0931@AdobeId'
      

    errorResponse:
      type: object
      properties:
        type:
          type: string
          example: "https://ns.adobe.com/aep/errors/MPS-000052-400"
        title:
          type: string
          example: "A concise error message"
        status:
          type: string
          example: 400
        report:
          type: object
          additionalProperties:
            type: string
          example:
            requestId: "4b485f56-9a06-4c00-ae03-e4a27468b113"

    page:
      type: object
      properties:
        orderby:
          type: string
          enum:
            - modifiedAt
            - createdAt
          example: '+modifiedAt'
        start:
          type: string
          example: '2016-08-29T09:12:33.001Z'
        next:
          type: string
          example: '2016-08-29T09:12:33.001Z'
        count:
          type: integer
          example: 1

    listOfLinks:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/hRefLink'
        next:
          $ref: '#/components/schemas/hRefLink'
        page:
          $ref: '#/components/schemas/hRefLink'
      example:
        self:
          href: '/ess/resource'
        next:
          href: '/ess/resource?start=2016-08-29T09:12:33.001Z&orderBy=+modifiedAt&limit=10'
        page:
          href: '/ess/resource?orderBy={orderBy}&start={start}&limit={limit}'

    selfLink:
      type: object
      required:
        - self
      properties:
        self:
          $ref: '#/components/schemas/hRefLink'
      example:
        self:
          href: '/ess/resource/3603ed66-ae86-42b8-8a90-d4b4e54e7c3b'

    hRefLink:
      type: object
      required:
        - href
      properties:
        href:
          type: string